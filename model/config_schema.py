import os
from redis import Redis
from pydantic import BaseModel, Field
from typing import Optional
from dotenv import load_dotenv, find_dotenv

load_dotenv(find_dotenv())

REDIS_HOST = os.getenv("REDIS_HOST")
REDIS_PORT = os.getenv("REDIS_PORT")
REDIS_CLIENT = Redis(host=REDIS_HOST,port=REDIS_PORT)
REDIS_URL = f"redis://{REDIS_HOST}:{REDIS_PORT}"
TIKA_SERVER_ENDPOINT = os.getenv("TIKA_SERVER_ENDPOINT")

API_HOST = os.getenv("API_HOST")
API_PORT = os.getenv("API_PORT")

class AppConfig(BaseModel):
    """
    Represents the configuration for an application task.

    Attributes:
        user (str): The user identifier associated with the task.
        task_id (str): A unique identifier for the task.
        type_of_analysis (str): The type of analysis to be performed.
    """
    user: str
    task_id: str
    type_of_analysis: str


class SaveRedisPydantic(BaseModel):
    """
    Represents a data model for saving responses and related information to Redis.

    Attributes:
        response (str): The response generated by the system.
        context (Optional[str]): Additional context for the response, default is an empty string.
        usage (str): Usage statistics related to the API call or response.
        response_json (str): The JSON representation of the system's response.
        messages (str): The messages exchanged during the interaction.
        type_of_analysis (str): The type of analysis related to the task.
        technique (Optional[str]): The technique used in the analysis, default is an empty string.
        evaluation (Optional[int]): An evaluation score for the response, default is 0.
        observation (Optional[str]): Observations related to the response, default is an empty string.
        file_names (Optional[str]): Names of files related to the response or task, default is an empty string.
    """
    response: str
    context: Optional[str] = Field(default="")
    usage: str
    response_json: str
    messages: str
    type_of_analysis: str
    technique: Optional[str] = Field(default="")
    evaluation: Optional[int] = Field(default=0)
    observation: Optional[str] = Field(default="")
    file_names: Optional[str] = Field(default="")


class Evaluation(BaseModel):
    """
    Represents an evaluation of a response or task.

    Attributes:
        evaluation (int): The evaluation score given to the response or task.
        observation (Optional[str]): Additional observations or notes related to the evaluation, default is None.
    """
    evaluation: int
    observation: Optional[str] = None